// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test1312.DBContext;

#nullable disable

namespace Test1312.Migrations
{
    [DbContext(typeof(DBContextTest))]
    partial class DBContextTestModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Test1312.Model.Participation", b =>
                {
                    b.Property<int>("Idparticipation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idparticipation"), 1L, 1);

                    b.Property<int>("nb_kick")
                        .HasColumnType("int");

                    b.Property<int>("roomid")
                        .HasColumnType("int");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("Idparticipation");

                    b.HasIndex("roomid");

                    b.HasIndex("userid");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("Test1312.Model.Question", b =>
                {
                    b.Property<int>("questionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("questionId"), 1L, 1);

                    b.Property<string>("language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ques_content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("questionId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Test1312.Model.Response", b =>
                {
                    b.Property<int>("responseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("responseId"), 1L, 1);

                    b.Property<int>("id_question")
                        .HasColumnType("int");

                    b.Property<string>("res_content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("score")
                        .HasColumnType("int");

                    b.HasKey("responseId");

                    b.HasIndex("id_question")
                        .IsUnique();

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("Test1312.Model.Room", b =>
                {
                    b.Property<int>("roomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roomId"), 1L, 1);

                    b.Property<string>("custom_words")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("draw_time")
                        .HasColumnType("int");

                    b.Property<string>("language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("round")
                        .HasColumnType("int");

                    b.Property<DateTime>("start_time")
                        .HasColumnType("datetime2");

                    b.HasKey("roomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Test1312.Model.Selection", b =>
                {
                    b.Property<int>("selectionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("selectionid"), 1L, 1);

                    b.Property<int>("idquestion")
                        .HasColumnType("int");

                    b.Property<int>("idroom")
                        .HasColumnType("int");

                    b.HasKey("selectionid");

                    b.HasIndex("idquestion");

                    b.HasIndex("idroom");

                    b.ToTable("Selections");
                });

            modelBuilder.Entity("Test1312.Model.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Test1312.Model.Participation", b =>
                {
                    b.HasOne("Test1312.Model.Room", "Room")
                        .WithMany("participations")
                        .HasForeignKey("roomid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Test1312.Model.User", "User")
                        .WithMany("Participations")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Test1312.Model.Response", b =>
                {
                    b.HasOne("Test1312.Model.Question", "questions")
                        .WithOne("responses")
                        .HasForeignKey("Test1312.Model.Response", "id_question")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("questions");
                });

            modelBuilder.Entity("Test1312.Model.Selection", b =>
                {
                    b.HasOne("Test1312.Model.Question", "Question")
                        .WithMany("selections")
                        .HasForeignKey("idquestion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Test1312.Model.Room", "Room")
                        .WithMany("selections")
                        .HasForeignKey("idroom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Test1312.Model.Question", b =>
                {
                    b.Navigation("responses");

                    b.Navigation("selections");
                });

            modelBuilder.Entity("Test1312.Model.Room", b =>
                {
                    b.Navigation("participations");

                    b.Navigation("selections");
                });

            modelBuilder.Entity("Test1312.Model.User", b =>
                {
                    b.Navigation("Participations");
                });
#pragma warning restore 612, 618
        }
    }
}
